package tictac;
import java.awt.*; 
import java.awt.event.*; 
import java.util.*; 
import javax.swing.*; 
import javax.swing.JApplet; 
import javax.swing.JButton;

@SuppressWarnings("removal")
public class TicTacToe  extends JApplet implements ActionListener {
	 
	  /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	Random random=new Random(); 
	  JPanel title_panel=new JPanel(); 
	  JPanel button_panel=new JPanel(); 
	  JLabel textfield=new JLabel();  
	  JButton[] buttons=new JButton[9]; 
	  boolean player1_turn; 
	  public void init() 
	  { 
	   textfield.setBackground(new Color(25,25,25)); 
	   textfield.setForeground(new Color(255,255,255)); 
	   textfield.setFont(new Font("calibry",Font.BOLD,50)); 
	   textfield.setHorizontalAlignment(JLabel.CENTER); 
	   textfield.setText("tic-tac-toe"); 
	   textfield.setOpaque(true); 
	   title_panel.setLayout(new BorderLayout()); 
	   title_panel.setBounds(0,0,800,100); 
	   button_panel.setLayout(new GridLayout(3,3)); 
	   button_panel.setBackground(new Color(0,0,0)); 
	
	  for(int i=0;i<9;i++) 
	  { 
	   buttons[i]=new JButton(); 
	   button_panel.add(buttons[i]); 
	   buttons[i].setFont(new Font("calibry",Font.BOLD,100)); 
	   buttons[i].setFocusable(false); 
	   buttons[i].addActionListener(this); 
	 
	  } 
	  title_panel.add(textfield); 
	  add(title_panel,BorderLayout.NORTH); 
	  add(button_panel); 
	  firstturn(); 
	 }   
	 public void firstturn() 
	  { 
	   try 
	   { 
	    Thread.sleep(2000); 
	   } 
	   catch(InterruptedException e) 
	   { 
	    e.printStackTrace(); 
	   } 
	   if(random.nextInt(2)==0) 
	   {  
	     player1_turn=true; 
	    textfield.setText("X's_TURN"); 
	   } 
	   else 
	   { 
	    player1_turn=false; 
	    textfield.setText("0's_TURN"); 
	   } 
	  } 
	  public void actionPerformed(ActionEvent e) 
	  { 
	   for(int i=0;i<9;i++) 
	   { 
	    if(e.getSource()==buttons[i]) 
	    { 
	     if(player1_turn) 
	     { 
	      if(buttons[i].getText()=="") 
	      {
	       buttons[i].setBackground(new Color(11,80,79)); 
	       buttons[i].setForeground(new Color(50,50,50)); 
	       
	       buttons[i].setText("X"); 
	       player1_turn=false; 
	       textfield.setText("0's_TURN"); 
	       check(); 
	      } 
	     } 
	     else 
	     {   
	      if(buttons[i].getText()=="") 
	      { 
	    	  buttons[i].setBackground(new Color(11,80,79));
	       buttons[i].setForeground(new Color(50,50,50)); 
	      
	       buttons[i].setText("O"); 
	       player1_turn=true; 
	       textfield.setText("X's_TURN"); 
	       check(); 
	      } 
	     } 
	    } 
	   } 
	  } 
	   
	   public void check() 
	  { 
	   if((buttons[0].getText()=="X")&&(buttons[1].getText()=="X")&&(buttons[2].getText()=="X ")) 
	    xwins(0,1,2); 
	   else if((buttons[3].getText()=="X")&&(buttons[4].getText()=="X")&&(buttons[5].getText()=="X")) 
	    xwins(3,4,5); 
	   else if((buttons[6].getText()=="X")&&(buttons[7].getText()=="X")&&(buttons[8].getText()=="X")) 
	    xwins(6,7,8); 
	   else if((buttons[0].getText()=="X")&&(buttons[3].getText()=="X")&&(buttons[6].getText()=="X")) 
	    xwins(0,3,6); 
	   else if((buttons[1].getText()=="X")&&(buttons[4].getText()=="X")&&(buttons[7].getText()=="X")) 
	    xwins(1,4,7); 
	   else if((buttons[2].getText()=="X")&&(buttons[5].getText()=="X")&&(buttons[8].getText()=="X")) 
	    xwins(2,5,8); 
	   else if((buttons[2].getText()=="X")&&(buttons[4].getText()=="X")&&(buttons[6].getText()=="X")) 
	    xwins(2,4,6); 
	   else if((buttons[0].getText()=="X")&&(buttons[4].getText()=="X")&&(buttons[8].getText()=="X")) 
	    xwins(0,4,8); 
	   else if((buttons[0].getText()=="O")&&(buttons[1].getText()=="O")&&(buttons[2].getText()=="O")) 
	    Owins(0,1,2); 
	   else if((buttons[3].getText()=="O")&&(buttons[4].getText()=="O")&&(buttons[5].getText()=="O")) 
	    Owins(3,4,5); 
	   else if((buttons[6].getText()=="O")&&(buttons[7].getText()=="O")&&(buttons[8].getText()=="O")) 
	    Owins(6,7,8); 
	   else if((buttons[0].getText()=="O")&&(buttons[3].getText()=="O")&&(buttons[6].getText()=="O")) 
	    Owins(0,3,6); 
	   else if((buttons[1].getText()=="O")&&(buttons[4].getText()=="O")&&(buttons[7].getText()=="O")) 
	    Owins(1,4,7); 
	   else if((buttons[2].getText()=="O")&&(buttons[5].getText()=="O")&&(buttons[8].getText()=="O")) 
	    Owins(2,5,8); 
	   else if((buttons[2].getText()=="O")&&(buttons[4].getText()=="O")&&(buttons[6].getText()=="O")) 
	    Owins(2,4,6); 
	   else if((buttons[0].getText()=="O")&&(buttons[4].getText()=="O")&&(buttons[8].getText()=="O")) 
	    Owins(0,4,8); 
	   else if((buttons[0].getText()!="")&&(buttons[1].getText()!="") &&(buttons[2].getText()!="")&&(buttons[3].getText()!="")&&(buttons[4].getText()!="") 
	     &&(buttons[5].getText()!="")&&(buttons[6].getText()!="")&&(buttons[7].getText()!="")&& (buttons[8].getText()!="")) 
	     textfield.setText("DRAW");  
	  } 
	   public void xwins(int a,int b,int c) 
	  { 
	   buttons[a].setBackground(Color.GREEN); 
	   buttons[b].setBackground(Color.GREEN); 
	   buttons[c].setBackground(Color.GREEN); 
	   for(int i=0;i<9;i++) 
	    buttons[i].setEnabled(false); 
	   textfield.setText("X WON"); 
	  } 
	   public void Owins(int a,int b,int c) 
	  { 
	   buttons[a].setBackground(Color.GREEN); 
	   buttons[b].setBackground(Color.GREEN); 
	   buttons[c].setBackground(Color.GREEN); 
	   for(int i=0;i<9;i++) 
	    buttons[i].setEnabled(false); 
	   textfield.setText("0 WON"); 
	  } 
}

